# Default values for notification-center.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry.com/notification-center/notification-center
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "20030"

imagePullSecrets: 
  - name: creds-registry
nameOverride: "notification-center"
fullnameOverride: "notification-center"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: notification-center.infra.local
      paths:
      - path: /
        backend:
          serviceName: notification-center.infra.local
          servicePort: 8080
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 512Mi
  # requests:
  #   cpu: 100m
  #   memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

livenessProbe:
  httpGet:
    path: /swagger/index.html
    port: http

readinessProbe:
  httpGet:
    path: /swagger/index.html
    port: http

liveness:
  initialDelaySeconds: 120
  failureThreshold: 3
  successThreshold: 1
  timeoutSeconds: 5
  periodSeconds: 60

readiness:
  initialDelaySeconds: 20
  failureThreshold: 3
  successThreshold: 1
  timeoutSeconds: 5
  periodSeconds: 20
