package controller

import (
    "git.puls.ru/devops1/sre/notification-center/model"
	"git.puls.ru/devops1/sre/notification-center/types"
	"github.com/gin-gonic/gin"
    // _ "./docs"
    _ "git.puls.ru/devops1/sre/notification-center/docs" // docs is generated by Swag CLI, you have to import it.
  )

// @Summary Send message to "Ecomm" telegram chat
// @Description Send message to telegram chat
// @Tags telegram
// @Accept json
// @Produce json
// @Param message body types.Message true "Send message"
// @Success 200 {array} types.Message
// @Failure 400,404 {array} model.HTTPError
// @Failure 500 {array} model.HTTPError
// @Router /telegram/ecomm [post]
// @Security ApiKeyAuth
// @Param Authorization header string true "Authorization"
func (c *Controller) TelegramEcomm(ctx *gin.Context) {
	model.MessageTelegram(ctx, types.ChatIdEcomm, types.BotTokenDevops)
}

// @Summary Send message to "PULS Markirovka Alerts" telegram chat
// @Description Send message "PULS Markirovka Alerts" to telegram chat
// @Tags telegram
// @Accept json
// @Produce json
// @Param message body types.Message true "Send message"
// @Success 200 {array} types.Message
// @Failure 400,404 {array} model.HTTPError
// @Failure 500 {array} model.HTTPError
// @Router /telegram/markirovka [post]
// @Security ApiKeyAuth
// @Param Authorization header string true "Authorization"
func (c *Controller) TelegramMarkirovka(ctx *gin.Context) {
	model.MessageTelegram(ctx, types.ChatIdMarkirovka, types.BotTokenMarkirovka)
}

// @Summary Send message to "PULS DevOps Monitor" telegram chat
// @Description Send message "PULS DevOps Monitor" to telegram chat
// @Tags telegram
// @Accept json
// @Produce json
// @Param message body types.Message true "Send message"
// @Success 200 {array} types.Message
// @Failure 400,404 {array} model.HTTPError
// @Failure 500 {array} model.HTTPError
// @Router /telegram/devops [post]
// @Security ApiKeyAuth
// @Param Authorization header string true "Authorization"
func (c *Controller) TelegramDevops(ctx *gin.Context) {
	model.MessageTelegram(ctx, types.ChatIdDevops, types.BotTokenDevops)
}