package controller

import (
	"fmt"
    "net/http"
	"github.com/gin-gonic/gin"
    "git.puls.ru/devops1/sre/devops-api/types"
	"git.puls.ru/devops1/sre/devops-api/model"
    // _ "./docs"
    _ "git.puls.ru/devops1/sre/devops-api/docs" // docs is generated by Swag CLI, you have to import it.
  )

// DnsAction 
// @Summary Create file with dns record
// @Description Create file with dns record
// @Tags dns
// @Accept  json
// @Produce  json
// @Param dnsrecord body types.DnsRecord true "Create dns record"
// @Success 200 {array} types.Message
// @Failure 400,404 {array} model.HTTPError
// @Failure 500 {array} model.HTTPError
// @Router /dns [post]
// @Security ApiKeyAuth
// @Param Authorization header string true "Authorization"
func (c *Controller) DnsAction(ctx *gin.Context) {
    var dnsrecord types.DnsRecord
	if err := ctx.ShouldBindJSON(&dnsrecord); err != nil {
		fmt.Println(err)
		model.NewError(ctx, http.StatusBadRequest, err)
		return
	}
	if err := model.CheckDns(dnsrecord); err != nil {
		fmt.Println(err)
		model.NewError(ctx, http.StatusBadRequest, err)
		return
	}
	if err := model.DoDns(dnsrecord); err != nil {
		fmt.Println(err)
        model.NewError(ctx, http.StatusInternalServerError, err)
        return
    }
	ctx.JSON(http.StatusOK, "OK")
}
