---
stages:
  - build_image
  - get_secret
  - deploy

get_secret:
  tags:
    - k8s-stage-gitlab  
  stage: get_secret
  image: registry.company.com/kubectl
  services:
    - name: registry.company.com/kubectl
      command: ["--mtu=1440"]
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_TLS_CERTDIR: ""
    VAULT_ADDR: https://vault.company.com
    VAULT_PATH: devops/ ${CI_PROJECT_NAME}/production
  script:
    - ls -lh
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=${CI_PROJECT_NAME}-production-read jwt=$CI_JOB_JWT)"
    - ./get_secret
  only:
    refs:
      - master
  artifacts:
    paths:
    - .env
    expire_in: 1 mins

build_image:
  stage: build_image
  variables:
    build_image: registry.company.com/${CI_PROJECT_NAME}/${CI_PROJECT_NAME}:${CI_PIPELINE_ID}
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - mkdir -p ~/.docker
    - echo "$DOCKER_AUTH_CONFIG" > ~/.docker/config.json
  script:
    - echo "$build_image"
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile Dockerfile --destination $build_image
  tags:
    - k8s-stage-gitlab
  only:
    refs:
      - master
  artifacts:
    paths:
    - .env
    expire_in: 1 mins

deploy:
  stage: deploy
  image:
    name: registry.company.com/kubectl
    entrypoint: [""]
  before_script:
    - mkdir -p ~/.docker
    - echo "$DOCKER_AUTH_CONFIG" > ~/.docker/config.json
    - mkdir ~/.kube
    - echo ${KUBE_CONFIG_STAGE} | base64 -d > ~/.kube/config
  script:
    - kubectl delete secrets -n devops env-list --ignore-not-found
    - kubectl create secret generic env-list --from-env-file=.env  -n devops
    - apk add --no-cache curl bash openssl gettext libintl
    - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh
    - mkdir -p /etc/deploy/config
    - chmod 700 get_helm.sh && chmod 700 /etc/deploy/config
    - ./get_helm.sh
    - chmod 700 /etc/deploy/config
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo update
    - cd helm
    - helm upgrade --atomic ${CI_PROJECT_NAME} ${CI_PROJECT_NAME}/ --values ${CI_PROJECT_NAME}/values.yaml --namespace devops  --debug --set image.tag=${CI_PIPELINE_ID} --timeout 1m --wait
    
  tags:
    - k8s-stage-gitlab 
  only:
    refs:
      - master
